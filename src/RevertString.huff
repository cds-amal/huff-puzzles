
/**
 *  REVERT_STRING HUFF EXERCISE
 *
 *
 *  When a transaction is being executed within a smart contract, based on the
 *  logic of that contract, it can revert if a preset condition is not met.

 *  They're 2 main ways to revert in solidity, 
 *  - using a string error message e,g 
      (`require(x != 0, "Only values above 0");`)
 *  - reverting with a custom error e.g 
      (`if(x == 0) revert OnlyValuesAbove0();`)
 *
 *  The task is to write within the `MAIN` macro below, huff code that reverts
 *  (all the time) with the string error message `Only Huff`
*/

// Only Huff
#define constant HUFF = 0x4f6e6c792048756666
#define error Error(string)
 
#define macro MAIN() = takes(0) returns(0) {
    /*
    Encode a string as return data:
    memlayout
    0x00: 20            // position of dynamic data
    0x20: 0x...09       // its length
    0x40: [HUFF]        // data
    */

    0x20 0x00 mstore    // position of dyn data
    [HUFF] 0x29 mstore  // data

    /* 0x09 0x20 mstore   // length: place 1 word */
    0x09 0x3f mstore8   // length: place one byte 
    0x60 0x00 revert
}
