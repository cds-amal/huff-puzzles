 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function
 *  `sendEther(address)` to transfer the value sent with the call to the
 *  address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function sendEther(address) payable returns()


 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xE0 shr   // [fn_sig (calldata @ 0x00 >> 0xE0)]
    __FUNC_SIG(sendEther) eq send jumpi  // []

    0x00 0x00 revert             // [] Revert if unknown fn
    send:
        push0                    // [0]
        push0                    // [0, 0]
        push0                    // [0, 0, 0]
        push0                    // [0, 0, 0, 0]

        callvalue                // [value, 0, 0, 0, 0]
        0x04 calldataload        // [address, value, 0 ,0, 0, 0]
        push0                    // [0, address, value, 0, 0, 0, 0] 
        call                     // [] (gas, address, value, argOffset, argSize, retOffset, retSize)
 }
